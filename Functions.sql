-- Functions

-- Basic Aggregate Functions:

/* Question 1:
Retrieve the total number of rentals made in the Sakila database.
Hint: Use the COUNT() function.*/
 
select count(rental_id) from sakila.rental;

/* Question 2:
Find the average rental duration (in days) of movies rented from the Sakila database.
Hint: Utilize the AVG() function.*/

select avg(rental_duration) from sakila.film;

-- String Functions:

/* Question 3:
Display the first name and last name of customers in uppercase.
Hint: Use the UPPER () function.*/

select upper(first_name) as first_name,upper(last_name) as last_name from customer;

/* Question 4:
Extract the month from the rental date and display it alongside the rental ID.
Hint: Employ the MONTH() function.*/

select rental_id,month(rental_date) from rental;

-- GROUP BY:

/* Question 5:
Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
Hint: Use COUNT () in conjunction with GROUP BY.*/

select customer_id,count(rental_id) as rentals_count from rental group by customer_id;

/* Question 6:
Find the total revenue generated by each store.
Hint: Combine SUM() and GROUP BY.*/

select st.store_id,sum(p.amount) as total_revenue from payment p join staff s on p.staff_id=s.staff_id 
join store st on s.store_id=st.store_id group by st.store_id;

/* Question 7:
Determine the total number of rentals for each category of movies.
Hint: JOIN film_category, film, and rental tables, then use cOUNT () and GROUP BY.*/

select c.name,count(r.rental_id) total_rentals from film_category fc join inventory i on fc.film_id=i.film_id 
join rental r on r.inventory_id=i.inventory_id join category c on c.category_id=fc.category_id group by c.name;

/* Question 8:
Find the average rental rate of movies in each language.
Hint: JOIN film and language tables, then use AVG () and GROUP BY.*/

select l.name,avg(f.rental_rate) as average_rental_rate from film f join language l on f.language_id=l.language_id group by l.name;

-- Joins

/* Questions 9 -
Display the title of the movie, customer s first name, and last name who rented it.
Hint: Use JOIN between the film, inventory, rental, and customer tables.*/

select c.first_name,c.last_name,f.title from rental r join inventory i on r.inventory_id=i.inventory_id join film f on f.film_id=i.film_id 
join customer c on r.customer_id=c.customer_id;

/* Question 10:
Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
Hint: Use JOIN between the film actor, film, and actor tables.*/

select a.first_name,a.last_name from film f join film_actor fa on f.film_id=fa.film_id join actor a on fa.actor_id=a.actor_id 
where f.title='Gone with the Wind';

/* Question 11:
Retrieve the customer names along with the total amount they've spent on rentals.
Hint: JOIN customer, payment, and rental tables, then use SUM() and GROUP BY.*/

select c.first_name,c.last_name,sum(p.amount) as total_amount from customer c join payment p on c.customer_id=p.customer_id 
group by c.first_name,c.last_name;

/* Question 12:
List the titles of movies rented by each customer in a particular city (e.g., 'London').
Hint: JOIN customer, address, city, rental, inventory, and film tables, then use GROUP BY.*/

select c.customer_id,c.first_name,c.last_name,f.title from rental r join inventory i on r.inventory_id=i.inventory_id join film f on i.film_id=f.film_id 
join customer c on r.customer_id=c.customer_id join address a on c.address_id=a.address_id join city ct on a.city_id=ct.city_id 
where ct.city='London' group by c.customer_id,c.first_name,c.last_name,f.title;

-- Advanced Joins and GROUP BY:

/* Question 13:
Display the top 5 rented movies along with the number of times they've been rented.
Hint: JOIN film, inventory, and rental tables, then use COUNT () and GROUP BY, and limit the results.*/

select f.film_id,f.title,count(r.rental_id) number_of_times_rented from rental r join inventory i on r.inventory_id=i.inventory_id 
join film f on f.film_id=i.film_id group by f.film_id,f.title order by number_of_times_rented desc limit 5;

/* Question 14:
Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
Hint: Use JOINS with rental, inventory, and customer tables and consider COUNT() and GROUP BY.*/

select c.customer_id,c.first_name,c.last_name from customer c join rental r on c.customer_id=r.customer_id join staff s 
on r.staff_id=s.staff_id join store st on s.store_id=st.store_id group by c.customer_id,c.first_name,c.last_name 
having count(distinct st.store_id)=2;